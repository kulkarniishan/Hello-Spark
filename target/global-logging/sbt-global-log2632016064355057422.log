[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_341)
[debug] Load.defaultLoad until apply took 125.3773ms
[debug]           Load.loadUnit: plugins took 217.9679ms
[debug]           Load.loadUnit: defsScala took 0.5867ms
[debug] [Loading] Scanning directory D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark\project
[debug]             Load.loadUnit: mkEval took 21.4992ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.4862 ms
[info] loading settings for project hello-spark-build from plugins.sbt ...
[debug]               Load.resolveProject(hello-spark-build) took 66.9709ms
[debug]             Load.loadTransitive: finalizeProject(Project(id hello-spark-build, base: D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark\project, plugins: List(<none>))) took 101.7241ms
[debug] [Loading] Done in D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark\project, returning: (hello-spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3769.6234ms
[debug]           Load.loadUnit: cleanEvalClasses took 18.5149ms
[debug]         Load.loadUnit(file:/D:/Personal%20Projects/Apache%20Spark/Hello-Spark/Hello-Spark/project/, ...) took 4016.8001ms
[debug]       Load.apply: load took 4206.8607ms
[debug]       Load.apply: resolveProjects took 8.2459ms
[debug]       Load.apply: finalTransforms took 76.5469ms
[debug]       Load.apply: config.delegates took 8.1998ms
[debug]       Load.apply: Def.make(settings)... took 553.7538ms
[debug]       Load.apply: structureIndex took 113.3013ms
[debug]       Load.apply: mkStreams took 2.0605ms
[info] loading project definition from D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9693.3317ms
[debug]     Load.loadUnit: defsScala took 0.0088ms
[debug] [Loading] Scanning directory D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark
[debug]       Load.loadUnit: mkEval took 1.0677ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.4149 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.5509ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark, plugins: List(<none>))) took 8.2542ms
[debug] [Loading] Done in D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3261.9535ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.4093ms
[debug]   Load.loadUnit(file:/D:/Personal%20Projects/Apache%20Spark/Hello-Spark/Hello-Spark/, ...) took 12961.5084ms
[debug] Load.apply: load took 12992.3407ms
[debug] Load.apply: resolveProjects took 0.3058ms
[debug] Load.apply: finalTransforms took 10.9326ms
[debug] Load.apply: config.delegates took 0.4881ms
[debug] Load.apply: Def.make(settings)... took 113.5653ms
[debug] Load.apply: structureIndex took 36.9226ms
[debug] Load.apply: mkStreams took 0.0045ms
[info] set current project to Hello-Spark (in build file:/D:/Personal%20Projects/Apache%20Spark/Hello-Spark/Hello-Spark/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- D:\Personal Projects\Apache Spark\Hello-Spark\Hello-Spark\build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-c7513ae80cbefbaf6c2f
[debug] Writing bsp connection file
[warn] sbt server could not start in 10s
